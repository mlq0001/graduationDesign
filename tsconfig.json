{
	"extends": "@vue/tsconfig/tsconfig.web.json",
	"include": ["env.d.ts", "src/**/*", "src/**/*.vue", "src/**/*.ts", "src/**/*.tsx", "*.d.ts", "src/**/*.d.ts", "auto-imports.d.ts", "vite.config.ts"],
	"exclude": ["node_modules", "dist", "script", "**/*.js"],
	"strict": false,
	"compilerOptions": {
		"allowJs": true,
		"target": "ESNext", // 无法找到模块“@/http/api/login.js”的声明文件。的解决方法
		"useDefineForClassFields": true,
		"module": "ESNext",
		"moduleResolution": "Node",
		"jsx": "preserve",
		"noImplicitAny": false,
		"sourceMap": true,
		"resolveJsonModule": true,
		"isolatedModules": true,
		"esModuleInterop": true,
		// 解析非相对模块名的基准目录
		"baseUrl": "./",
		// 用于设置解析非相对模块名称的基本目录，相对模块不会受到baseUrl的影响
		"paths": {
			// 用于设置模块名到基于baseUrl的路径映射
			"@/*": ["./src/*"]
		},
		"types": ["element-plus/global", "vite/client", "node"],
		"lib": ["ESNext", "DOM"],
		// "strict": false,
		"skipLibCheck": true, // 不对第三方依赖类型检查 ，element-plus 生产打包报错
		"allowSyntheticDefaultImports": true, // 默认导入
		// element 类型提示
		// "types": ["element-plus/global"],
		/* Strict Type-Checking Options */
		"strict": true /* Enable all strict type-checking options. */
		// "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
		// "strictNullChecks": true,              /* Enable strict null checks. */
		// "strictFunctionTypes": true,           /* Enable strict checking of function types. */
		// "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
		// "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
		// "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
		// "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
	},
	"references": [
		{
			"path": "./tsconfig.config.json"
		}
	]
}
